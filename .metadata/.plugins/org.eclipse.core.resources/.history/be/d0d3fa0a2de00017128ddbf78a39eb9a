package mtr;

import java.util.ArrayList;
import java.util.HashSet;

public class Station {
	
	private String name;
	private HashSet<Station> neighbouringStations;
	private ArrayList<Line> linesBelongingTo;
	private int stationSearchNumber;
	
	public Station(String name){
		this.name = name;
		neighbouringStations = new HashSet<>();
		linesBelongingTo = new ArrayList<>();
		stationSearchNumber = 0;
	}
	
	/**
	 * Lets you add a neighbouring station to this station
	 * @param neighbour the Station object that you want to add as a neighbouring station 
	 */
	public void addNeighbour(Station neighbour){
		neighbouringStations.add(neighbour);
	}
	
	/**
	 * Lists all termini in this MTR network.
	 * @return the name of all MTR stations that are the end point of the lines in the MTR network. 
	 */
	public void addLineBelongingTo(Line line){
		linesBelongingTo.add(line);
	}	
	
	/**
	 * Lists all termini in this MTR network.
	 * @return the name of all MTR stations that are the end point of the lines in the MTR network. 
	 */
	public String getName(){
		return name;
	}
	
	/**
	 * Lists all termini in this MTR network.
	 * @return the name of all MTR stations that are the end point of the lines in the MTR network. 
	 */
	public void setExplored(int stationSearchNumber){
		this.stationSearchNumber = stationSearchNumber;
	}
	
	/**
	 * Lists all termini in this MTR network.
	 * @return the name of all MTR stations that are the end point of the lines in the MTR network. 
	 */
	public ArrayList<Station> getUnexploredNeighbouringStations(int searchNumber){
		ArrayList<Station> toReturn = new ArrayList<>();
		for(Station station : neighbouringStations){
			if(station.stationSearchNumber != searchNumber){
				toReturn.add(station);
			}
		}
		return toReturn;
	}
	
	/**
	 * Lists all termini in this MTR network.
	 * @return the name of all MTR stations that are the end point of the lines in the MTR network. 
	 */
	public ArrayList<Line> getLinesBelongingTo(){
		return linesBelongingTo;
	}
}